name: Jekyll site CI

# 触发条件
on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.gitignore'
  pull_request:
    branches: [ main ]
  # 允许手动触发
  workflow_dispatch:

# 设置权限
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    # 添加并发限制，防止同时运行多个相同的工作流
    concurrency:
      group: pages-${{ github.workflow }}
      cancel-in-progress: true
      
    steps:
    - uses: actions/checkout@v4

    - name: 设置 Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true

    - name: 设置页面缓存
      uses: actions/configure-pages@v3
    
    - name: 安装依赖
      run: bundle install
    
    - name: 验证 Secrets
      run: |
        echo "检查必需的 Secrets 配置："
        echo "----------------------------------------"
        if [ -n "${{ secrets.GOOGLE_ANALYTICS_ID }}" ]; then
          echo "✓ GOOGLE_ANALYTICS_ID    : 已配置 (长度: ${#GOOGLE_ANALYTICS_ID})"
        else
          echo "✗ GOOGLE_ANALYTICS_ID    : 未配置"
        fi
        if [ -n "${{ secrets.GITALK_CLIENT_ID }}" ]; then
          echo "✓ GITALK_CLIENT_ID      : 已配置 (长度: ${#GITALK_CLIENT_ID})"
        else
          echo "✗ GITALK_CLIENT_ID      : 未配置"
        fi
        if [ -n "${{ secrets.GITALK_CLIENT_SECRET }}" ]; then
          echo "✓ GITALK_CLIENT_SECRET  : 已配置 (长度: ${#GITALK_CLIENT_SECRET})"
        else
          echo "✗ GITALK_CLIENT_SECRET  : 未配置"
        fi
        echo "----------------------------------------"

    - name: 创建密钥配置
      env:
        JEKYLL_ENV: production
      run: |
        echo "# Auto-generated secrets configuration" > _config_secrets.yml
        echo "google_analytics: '${{ secrets.GOOGLE_ANALYTICS_ID }}'" >> _config_secrets.yml
        echo "gitalk:" >> _config_secrets.yml
        echo "  clientID: '${{ secrets.GITALK_CLIENT_ID }}'" >> _config_secrets.yml
        echo "  clientSecret: '${{ secrets.GITALK_CLIENT_SECRET }}'" >> _config_secrets.yml
        
        # 验证配置文件是否正确生成（不显示实际值）
        echo "Verifying _config_secrets.yml structure:"
        cat _config_secrets.yml | grep -v "clientID\|clientSecret\|google_analytics"    - name: 构建站点
      env:
        JEKYLL_ENV: production
      run: |
        echo "验证 Jekyll 配置..."
        echo "----------------------------------------"
        echo "环境变量:"
        echo "JEKYLL_ENV: $JEKYLL_ENV"
        echo "----------------------------------------"
        echo "合并配置文件:"
        echo " - _config.yml"
        echo " - _config_secrets.yml"
        echo "----------------------------------------"
          # 尝试构建
        if bundle exec jekyll build --config _config.yml,_config_secrets.yml --trace; then
          echo "✓ 构建成功"
          echo "----------------------------------------"
          echo "验证生成的文件..."
          if grep -r "gtag('config'" _site/ >/dev/null && grep -r "gitalk.render" _site/ >/dev/null; then
            echo "✓ GA 和 Gitalk 代码已正确注入"
          else
            echo "✗ 配置可能未正确注入"
          fi
          echo "----------------------------------------"
        else
          echo "✗ 构建失败"
          echo "检查合并后的配置（已隐藏敏感值）:"
          bundle exec jekyll build --config _config.yml,_config_secrets.yml --trace --verbose | grep -v "clientID\|clientSecret\|google_analytics"
          exit 1
        fi
    
    - name: 上传构建产物
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./_site

    - name: 清理缓存
      run: bundle clean --force
      if: always()  # 即使前面步骤失败也执行

    # 部署到 GitHub Pages
    - name: 部署到 GitHub Pages
      id: deployment  # 添加 id 以便引用输出
      if: github.ref == 'refs/heads/main'
      uses: actions/deploy-pages@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        timeout: 600000  # 10分钟超时
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}